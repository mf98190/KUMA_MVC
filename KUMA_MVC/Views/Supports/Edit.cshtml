@model Support

@{
    Layout = "~/Views/Shared/_BackSystem_Layout.cshtml";
    ViewBag.Title = "Edit";
}
@section topCSS
{
    <link href="~/Assets/BackSystem/assets/css/CRUD-style.css" rel="stylesheet" />
}

<div class="card">
    <div class="card-header">
        Edit <strong>支援</strong>
    </div>
    <div class="card-body card-block">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
           
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.SupportID, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="">
                    @Html.EditorFor(model => model.SupportID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.SupportID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SupportCategoryID, "SupportCategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.DropDownList("SupportCategoryID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SupportCategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SupportTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.SupportTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SupportTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SupportContent, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.SupportContent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SupportContent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StatusID, "StatusID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SupportTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.SupportTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"  } })
                    @Html.ValidationMessageFor(model => model.SupportTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 ">
                    <input type="submit" value="Save" class="btn btn-outline-secondary btn-lg btn-block" />
                </div>
            </div>
        </div>
        }
    </div>
    <div class="card-footer">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Support</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SupportID)

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportCategoryID, "SupportCategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.DropDownList("SupportCategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupportCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.EditorFor(model => model.SupportTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupportTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.EditorFor(model => model.SupportContent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupportContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusID, "StatusID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.EditorFor(model => model.SupportTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupportTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 ">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

